<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.dao.${upClassName}Dao">

    <typeAlias alias="${lowClassName}" type="${packageName}.dao.${upClassName}Dao"/>

    <resultMap type="${packageName}.model.${upClassName}" id="${lowClassName}_result">
#foreach($resultMapColumn in $resultMapColumns)
        $resultMapColumn
#end
    </resultMap>

    <sql id="${upClassName}_Query_List_Sharing">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
#foreach($whereCondition in $whereConditions)
            $whereCondition
#end
        </trim>
    </sql>

    <sql id="${upClassName}_By_${primaryKey}">
        WHERE ${tableName}.${columnPrimaryKey} = #{${normalPrimaryKey}}#
    </sql>

    <sql id="${upClassName}_List_Paramter">
        <dynamic prepend="ORDER BY">
            <isNotEmpty property = "orderItem">
                ${tableName}.#{orderItem} #{orderType} <!-- # and $ has difference, this place need $ -->
            </isNotEmpty>
        </dynamic>
    </sql>

    <sql id="${upClassName}_column">
#foreach($column in $columns)
        $column
#end
    </sql>

    <insert id="add${upClassName}" parameterClass="${lowClassName}" >
        INSERT INTO ${tableName} (
            <include refid="${upClassName}_column" />
        )
        VALUES (
        <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($insertCondition in $insertConditions)
            $insertCondition
#end
        </trim>
        <!--<selectKey resultClass="long" keyProperty="${primaryKey}">
                select last_insert_id() as ID from ${tableName} limit 1
        </selectKey>-->
    </insert>

    <update id="update${upClassName}" parameterType="${lowClassName}">
        UPDATE ${tableName}
        <set>
#foreach($updateCondition in $updateConditions)
            $updateCondition
#end
        </set>
        WHERE <include refid="${upClassName}_By_${primaryKey}" />
    </update>

    <select id="find${upClassName}" resultMap="${lowClassName}_result" parameterClass="java.util.HashMap">
        SELECT
        <include refid="${upClassName}_column" />
        FROM ${tableName} ${tableName}
        <include refid="${upClassName}_Query_List_Sharing" />
    </select>

    <select id="findBy${primaryKey}" resultMap="${lowClassName}_result" parameterClass="${primaryKeyType}">
        SELECT
        <include refid="${upClassName}_column" />
        FROM ${tableName} ${tableName}
        <include refid="${upClassName}_By_${primaryKey}" />
    </select>

    <select id="list${upClassName}" resultMap="${lowClassName}_result" parameterType="java.util.HashMap">
        SELECT
        <include refid="${upClassName}_column" />
        FROM ${tableName} ${tableName}
        <include refid="${upClassName}_Query_List_Sharing" />
        <include refid="${upClassName}_List_Paramter" />
        limit #{begin},#{pageSize}
    </select>

    <select id="list${upClassName}Count" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
        SELECT
        COUNT(*)
        FROM ${tableName} ${tableName}
        <include refid="${upClassName}_Query_List_Sharing" />
    </select>

    <delete id="del${upClassName}" parameterClass="${lowClassName}">
        DELETE  FROM  ${tableName}
        <include refid="${upClassName}_By_${primaryKey}" />
    </delete>

</mapper>